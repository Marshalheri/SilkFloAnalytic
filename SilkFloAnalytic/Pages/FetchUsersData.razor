@page "/fetchusers"

@inject UserStore userStore

@if (_users == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container-fluid">
        <RadzenCard>
            <h3><b>All Users</b></h3>
            <RadzenDataGrid Data="@_users" AllowPaging="true" PageSize="10" TItem="User" ShowPagingSummary="true" AllowColumnResize="true" ColumnWidth="120px">
                <Columns>
                    <RadzenDataGridColumn Frozen="true" Width="50px" TItem="User" Title="S/N" TextAlign="TextAlign.Center">
                        <Template Context="user">
                            @(_users.IndexOf(user) + 1)
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="User" Property="User.FirstName" Title="First Name" />
                    <RadzenDataGridColumn TItem="User" Property="User.LastName" Title="Last Name" />
                    <RadzenDataGridColumn TItem="User" Property="User.UserName" Title="User Name" />
                    <RadzenDataGridColumn TItem="User" Property="User.EmailAddress" Title="Email Address" />
                    <RadzenDataGridColumn TItem="User" Property="User.PhoneNumber" Title="Phone Number" />
                    <RadzenDataGridColumn TItem="User" Property="User.StateOfOrigin" Title="State Of Origin" />
                    <RadzenDataGridColumn TItem="User" Property="User.IsActive" Title="IsActive">
                        <Template Context="data">
                            @if (data.IsActive == true)
                            {
                                <p style="color:blue">@data.IsActive</p>
                            }
                            else
                            {
                                <p style="color:red">@data.IsActive</p>
                            }
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="User" Property="User.Gender" Title="Gender" />
                    <RadzenDataGridColumn TItem="User" Property="User.DateCreated" Title="DateCreated" FormatString="{0:d}" />
                </Columns>
            </RadzenDataGrid>
        </RadzenCard>
        @*<div class="table-responsive">
                <table class="table table-bordered table-dark table-striped table-sm">
                    <thead style="font-size:small">
                        <tr>
                            <th>S/N</th>
                            <th>First Name</th>
                            <th>Last Name</th>
                            <th>User Name</th>
                            <th>Email Address</th>
                            <th>Phone Number</th>
                            <th>State Of Origin</th>
                            <th>Gender</th>
                            <th>IsActive</th>
                            <th>Date Created</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in _users)
                        {
                            <tr>
                                <td>@count</td>
                                <td>@user.FirstName</td>
                                <td>@user.LastName</td>
                                <td>@user.UserName</td>
                                <td>@user.EmailAddress</td>
                                <td>@user.PhoneNumber</td>
                                <td>@user.StateOfOrigin</td>
                                <td>@user.Gender.ToString()</td>
                                @if (user.IsActive)
                                {
                                    <td style="color:blue">@user.IsActive</td>
                                }
                                else
                                {
                                    <td style="color:red">@user.IsActive</td>
                                }
                                <td>@user.DateCreated.ToString("G")</td>
                            </tr>
                            count++;
                        }
                    </tbody>
                </table>
            </div>*@
    </div>
}

@code {
    private IList<User> _users;
    private long count = 1;

    protected override async Task OnInitializedAsync()
    {
        userStore.AddStateChangeListener(() => { StateHasChanged(); });
        await userStore.FetUsersAsync();
        _users = (await userStore.GetUsers()).ToList();
    }
}
